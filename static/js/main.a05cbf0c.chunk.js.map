{"version":3,"sources":["images sync /^/.//.*$","images/ackbar.png","images/anakin.png","images/bobba.png","images/c3p0.png","images/chewie.png","images/ewok.png","images/han.png","images/jabba.png","images/lando.png","images/maul.png","images/quigon.png","images/r2d2.png","images/sebulba.png","images/stormtrooper.png","images/tusken.png","images/vader.png","images/yoda.png","components/Characters/Characters.js","components/Jumbo/Jumbo.js","App.js","serviceWorker.js","index.js"],"names":["map","./ackbar.png","./anakin.png","./bobba.png","./c3p0.png","./chewie.png","./ewok.png","./han.png","./jabba.png","./lando.png","./maul.png","./quigon.png","./r2d2.png","./sebulba.png","./stormtrooper.png","./tusken.png","./vader.png","./yoda.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","CharacterCards","props","react_default","a","createElement","className","alt","image","replace","src","require","onClick","imageClick","Jumbo","this","score","Component","App","state","characters","charactersPicked","event","chosenCharacter","target","characterAlreadyPicked","_this","indexOf","console","log","setState","sort","b","Math","random","alert","concat","_this2","components_Jumbo_Jumbo","character","Characters_Characters","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8dAAA,IAAAA,EAAA,CACAC,eAAA,GACAC,eAAA,GACAC,cAAA,GACAC,aAAA,GACAC,eAAA,GACAC,aAAA,GACAC,YAAA,GACAC,cAAA,GACAC,cAAA,GACAC,aAAA,GACAC,eAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,qBAAA,GACAC,eAAA,GACAC,cAAA,GACAC,aAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAApB,EAAAmB,GACA,KAAAC,EAAA,IACA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAH,EAEAF,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAA1B,IAEAkB,EAAAU,QAAAP,EACAQ,EAAAC,QAAAZ,EACAA,EAAAE,GAAA,oBCvCAS,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,mDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,mDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,mDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,0DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,mDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,6KCczBC,MAXf,SAAwBC,GACpB,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,QAEVH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eAAeC,IAAKL,EAAMM,MAAMC,QAAQ,OAAQ,IAAKC,IAAKC,MAAQ,KAAkBT,EAAMM,OAAQI,QAASV,EAAMW,sBCWlIC,0LAdP,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eAC3BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,gCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,6EAEFH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,SAA4CS,KAAKb,MAAMc,gBATrCC,cCyELC,6MAnEbC,MAAQ,CACNC,aACAC,iBAAkB,GAClBL,MAAO,KAMTH,WAAa,SAAAS,GACX,IAAMC,EAAkBD,EAAME,OAAOjB,IAC/BkB,EACJC,EAAKP,MAAME,iBAAiBM,QAAQJ,IAAoB,EACxDK,QAAQC,IAAIN,GAEXE,GACDC,EAAKI,SAAS,CACZV,WAAYM,EAAKP,MAAMC,WAAWW,KAAK,SAAC3B,EAAE4B,GAAH,MAAS,GAAMC,KAAKC,WAC3Db,iBAAkB,GAClBL,MAAO,IAETmB,MAAM,yBAIRT,EAAKI,SAAS,CACZV,WAAYM,EAAKP,MAAMC,WAAWW,KAAK,SAAC3B,EAAE4B,GAAH,MAAS,GAAMC,KAAKC,WAC3DlB,MAAOU,EAAKP,MAAMH,MAAQ,EAC1BK,iBAAkBK,EAAKP,MAAME,iBAAiBe,OAAOb,IACrD,WACyB,KAArBG,EAAKP,MAAMH,QACbmB,MAAM,iBACNT,EAAKI,SAAS,CACZV,WAAYM,EAAKP,MAAMC,WAAWW,KAAK,SAAC3B,EAAE4B,GAAH,MAAS,GAAMC,KAAKC,WAC3Db,iBAAkB,GAClBL,MAAO,gFAQJ,IAAAqB,EAAAtB,KACP,OACCZ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACiC,EAAD,CAAOtB,MAAOD,KAAKI,MAAMH,QACzBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdS,KAAKI,MAAMC,WAAWnD,IAAI,SAAAsE,GAAS,OAClCpC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACjBH,EAAAC,EAAAC,cAACmC,EAAD,CACAnD,GAAIkD,EAAUlD,GACdoD,IAAKF,EAAUlD,GACfmB,MAAO+B,EAAU/B,MACjBK,WAAYwB,EAAKxB,yBAxDTI,aCKEyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a05cbf0c.chunk.js","sourcesContent":["var map = {\n\t\"./ackbar.png\": 18,\n\t\"./anakin.png\": 19,\n\t\"./bobba.png\": 20,\n\t\"./c3p0.png\": 21,\n\t\"./chewie.png\": 22,\n\t\"./ewok.png\": 23,\n\t\"./han.png\": 24,\n\t\"./jabba.png\": 25,\n\t\"./lando.png\": 26,\n\t\"./maul.png\": 27,\n\t\"./quigon.png\": 28,\n\t\"./r2d2.png\": 29,\n\t\"./sebulba.png\": 30,\n\t\"./stormtrooper.png\": 31,\n\t\"./tusken.png\": 32,\n\t\"./vader.png\": 33,\n\t\"./yoda.png\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/ackbar.2bc0018e.png\";","module.exports = __webpack_public_path__ + \"static/media/anakin.59153367.png\";","module.exports = __webpack_public_path__ + \"static/media/bobba.58a74839.png\";","module.exports = __webpack_public_path__ + \"static/media/c3p0.f7f0158a.png\";","module.exports = __webpack_public_path__ + \"static/media/chewie.aac89741.png\";","module.exports = __webpack_public_path__ + \"static/media/ewok.1823b4a1.png\";","module.exports = __webpack_public_path__ + \"static/media/han.241cd289.png\";","module.exports = __webpack_public_path__ + \"static/media/jabba.4155bdd6.png\";","module.exports = __webpack_public_path__ + \"static/media/lando.b64200e1.png\";","module.exports = __webpack_public_path__ + \"static/media/maul.312de832.png\";","module.exports = __webpack_public_path__ + \"static/media/quigon.82105734.png\";","module.exports = __webpack_public_path__ + \"static/media/r2d2.cf656021.png\";","module.exports = __webpack_public_path__ + \"static/media/sebulba.cb56608c.png\";","module.exports = __webpack_public_path__ + \"static/media/stormtrooper.e2806e82.png\";","module.exports = __webpack_public_path__ + \"static/media/tusken.0ed375b1.png\";","module.exports = __webpack_public_path__ + \"static/media/vader.890682de.png\";","module.exports = __webpack_public_path__ + \"static/media/yoda.eba8736d.png\";","import React from 'react'\nimport './Characters.css';\n\nfunction CharacterCards(props) {\n    return (\n        \n        <div className = 'card'>\n            \n               <img className = 'card-img-top' alt={props.image.replace('.png', '')} src={require('../../images/' + props.image)} onClick={props.imageClick}/>\n            \n        </div>\n    )\n}\n\nexport default CharacterCards","import React, { Component } from 'react';\nimport './Jumbo.css';\n\nclass Jumbo extends Component {\n    render() {\n        return(\n            <div className=\"jumbotron jumbotron-fluid jumbotronJumbo\">\n            <div className = 'jumboOpaque'>\n  <div className=\"container\">\n    <h1 className=\"display-4 text-center\">Star Wars Themed Memory Game</h1>\n    <p className=\"lead text-center\">Click on an image to earn points, but don't click on any more than once!</p>\n  </div>\n  <p className=\"text-center scoreText\">Score:{this.props.score}</p>\n</div>\n</div>\n        )\n    }\n}\n\nexport default Jumbo;","import React, { Component } from 'react';\nimport CharacterCards from \"./components/Characters/Characters\"\nimport characters from './characters.json'\nimport Jumbo from './components/Jumbo/Jumbo'\n\n\n\nclass App extends Component {\n\n  state = {\n    characters,\n    charactersPicked: [],\n    score: 0\n\n  };\n\n\n\n  imageClick = event => {\n    const chosenCharacter = event.target.alt\n    const characterAlreadyPicked =\n      this.state.charactersPicked.indexOf(chosenCharacter) > -1;\n      console.log(chosenCharacter)\n\n    if(characterAlreadyPicked) {\n      this.setState({\n        characters: this.state.characters.sort((a,b) => 0.5 - Math.random()),\n        charactersPicked: [],\n        score: 0\n      });\n      alert('You lose! Try again!')\n      \n  } else {\n    \n    this.setState({\n      characters: this.state.characters.sort((a,b) => 0.5 - Math.random()),\n      score: this.state.score + 1,\n      charactersPicked: this.state.charactersPicked.concat(chosenCharacter)\n    },() => {\n      if (this.state.score === 12) {\n        alert(\"Yay! You Win!\");\n        this.setState({\n          characters: this.state.characters.sort((a,b) => 0.5 - Math.random()),\n          charactersPicked: [],\n          score: 0\n        });\n      }\n    })\n  }\n}\n  \n\n    render() {\n      return (\n       <div>\n        <Jumbo score={this.state.score}/>\n        <div className='row'>\n        {this.state.characters.map(character => (\n          <div className = 'col-sm-2'>\n          <CharacterCards\n          id={character.id}\n          key={character.id}\n          image={character.image}\n          imageClick={this.imageClick}\n          />\n          </div>\n        ))}\n        </div>\n        </div>\n      \n      )\n    }\n}\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}